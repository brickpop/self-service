# map $http_upgrade $connection_upgrade {
# 	default upgrade;
# 	'' close;
# }

# upstream docker-cryptpad {
# 	server cryptpad:3000;
# }

# server {
#     listen 443 ssl http2;
#     server_name pad.example.com sandbox.example.com;

#     ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
#     # ssl_dhparam /etc/nginx/dhparam.pem;
#     # ssl_session_timeout 5m;
#     # ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # omit SSLv3 because of POODLE
#     # # ECDHE better than DHE (faster)  ECDHE & DHE GCM better than CBC (attacks on AES)  Everything better than SHA1 (deprecated)
#     # ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA';
#     # ssl_prefer_server_ciphers on;

#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header X-XSS-Protection "1; mode=block";
#     add_header X-Content-Type-Options nosniff;
#     # add_header X-Frame-Options "SAMEORIGIN";

#     root /home/cryptpad/cryptpad;
#     index index.html;
#     error_page 404 /customize.dist/404.html;

#     if ($args ~ ver=) {
#         set $cacheControl max-age=31536000;
#     }
#     # Will not set any header if it is emptystring
#     add_header Cache-Control $cacheControl;

#     set $styleSrc   "'unsafe-inline' 'self' cryptpad.example.com";
#     set $scriptSrc  "'self' sandbox.example.com";
#     set $connectSrc "'self' https://cryptpad.example.com wss://cryptpad.example.com https://api.cryptpad.example.com wss://cryptpad.example.com cryptpad.example.com blob: cryptpad.example.com";
#     set $fontSrc    "'self' data: cryptpad.example.com";
#     set $imgSrc     "data: * blob:";
#     set $frameSrc   "'self' sandbox.example.com blob:";
#     set $mediaSrc "* blob:";
#     set $childSrc "https://cryptpad.example.com";
#     set $workerSrc "https://cryptpad.example.com";

#     set $unsafe 0;
#     if ($uri = "/pad/inner.html") { set $unsafe 1; }
#     if ($host != sandbox.example.com) { set $unsafe 0; }
#     if ($unsafe) {
#         set $scriptSrc "'self' 'unsafe-eval' 'unsafe-inline' cryptad.example.com";
#     }
#     add_header Content-Security-Policy "default-src 'none'; child-src $childSrc; worker-src $workerSrc; media-src $mediaSrc; style-src $styleSrc; script-src $scriptSrc; connect-src $connectSrc; font-src $fontSrc; img-src $imgSrc; frame-src $frameSrc;";

#     location ^~ /cryptpad_websocket {
#         proxy_pass http://docker-cryptpad;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

#         # WebSocket support (nginx 1.4)
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection upgrade;
#     }

#     location ^~ /customize.dist/ {
#         # This is needed in order to prevent infinite recursion between /customize/ and the root
#     }
#     location ^~ /customize/ {
#         rewrite ^/customize/(.*)$ $1 break;
#         try_files /customize/$uri /customize.dist/$uri;
#     }

#     location = /api/config {
#         proxy_pass http://docker-cryptpad;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     }

#     location ^~ /block/ {
#         add_header Cache-Control max-age=0;
#         try_files $uri =404;
#     }

#     location ^~ /blob/ {
#         add_header Cache-Control max-age=31536000;
#         try_files $uri =404;
#     }

#     location ^~ /datastore/ {
#         add_header Cache-Control max-age=0;
#         try_files $uri =404;
#     }

#     location ~ ^/(register|login|settings|user|pad|drive|poll|slide|code|whiteboard|file|media|profile|contacts|todo|filepicker|debug|kanban)$ {
#         rewrite ^(.*)$ $1/ redirect;
#     }

#     try_files /www/$uri /www/$uri/index.html /customize/$uri;
# }