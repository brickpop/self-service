#!/bin/bash
PATH=./node_modules/.bin:$PATH
DOCKERFILE=docker-compose.yml

###############################################################################
# SERVER ACTIONS

function init {
  ./init-letsencrypt.sh
}

function customize {
  if [ "$1" == "contact" ] ; then
    if [ "$2" == "" ] ; then
      echo "An email is required"
      exit 1
    fi
    sed -i s/user@email.com/$2/g ./init-letsencrypt.sh
  elif [ "$1" == "wiki-email" ] ; then
    if [ "$2" == "" ] ; then
      echo "An email is required"
      exit 1
    fi
    sed -i s/wiki-admin@domain.com/$2/g ./docker-compose.yml
  elif [ "$1" == "domain" ] ; then
    if [ "$2" == "" ] ; then
      echo "A domain is required"
      exit 1
    fi
    grep -R example.com . | cut -d':' -f1 | uniq | while read f
      do sed -i s/example.com/$2/g $f
      done
  else
    echo "Invalid command"
    exit 1
  fi
}

function logs {
  docker-compose -f $DOCKERFILE logs -f $1
}

function ps {
  docker ps | grep dockersuit
}

function build {
  docker-compose -f $DOCKERFILE build $1
}

function upgrade {
  build $1

  # will recreate newer container for updated images
  docker-compose -f $DOCKERFILE up -d
}

function restart {
  docker-compose -f $DOCKERFILE restart $1
}

function tidy_up {
  docker image prune
}

###############################################################################
# DEVELOPER ACTIONS


###############################################################################
# HELPERS


###############################################################################
# DEFAULT => INFO

function default {
  echo "$0 <task> <args>"
  echo
  echo "Available tasks:"
  compgen -A function | cat -n
}


TIMEFORMAT="Task completed in %3lR"
time ${@:-default}