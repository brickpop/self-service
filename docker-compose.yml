# https://medium.com/@pentacent/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71

version: '3'
services:

  # REVERSE PROXY
  nginx:
    image: nginx:1.15-alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - wikijs
      - certbot
    volumes:
      - ./services/nginx:/etc/nginx/conf.d
      - ./services/certbot/conf:/etc/letsencrypt
      - ./services/certbot/www:/var/www/certbot
      - ./services/www:/var/www/html # placeholder HTML web site
    networks:
      - proxy-network

  # LETSENCRYPT MANAGER
  certbot:
    image: certbot/certbot
    container_name: certbot
    restart: always
    volumes:
      - ./services/certbot/conf:/etc/letsencrypt
      - ./services/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  # WIKI DB
  wikidb:
    image: mongo:3
    container_name: wikidb
    expose:
      - '27017'
    command: '--smallfiles --bind_ip ::,0.0.0.0'
    restart: always
    networks:
      - databases-network
    environment:
      - 'MONGO_LOG_DIR=/dev/null'
    volumes:
      - ./services/wikijs/mongo:/services/db
      
  # WIKI ENGINE
  wikijs:
    image: 'requarks/wiki:latest'
    container_name: wikijs
    restart: always
    depends_on:
      - wikidb
    networks:
      - proxy-network
      - databases-network
    expose:
      - '3000'
    environment:
      WIKI_ADMIN_EMAIL: wiki-admin@domain.com
    volumes:
      - ./services/wikijs/config.yml:/var/wiki/config.yml

  # cryptpad:
  #   build:
  #     context: .
  #     args:
  #       - VERSION=${VERSION}
  #   image: "xwiki/cryptpad:${VERSION}"
  #   hostname: cryptpad
  #   environment:
  #     - USE_SSL=false
  #     - STORAGE='./storage/file'
  #     - LOG_TO_STDOUT=true

  #   restart: always
  #   volumes:
  #     - ./services/cryptpad/files:/cryptpad/datastore:rw
  #     - ./services/cryptpad/customize:/cryptpad/customize:rw
  #     - ./services/cryptpad/pins:/cryptpad/pins:rw
  #     - ./services/cryptpad/blob:/cryptpad/blob:rw
  #     - ./services/cryptpad/blobstage:/cryptpad/blobstage:rw
  #     - ./services/cryptpad/tasks:/cryptpad/tasks:rw
  #     - ./services/cryptpad/block:/cryptpad/block:rw

  strapi:
    # build: .
    image: strapi/strapi
    environment:
      - APP_NAME=strapi-app
      - DATABASE_CLIENT=mongo
      - DATABASE_HOST=strapidb
      - DATABASE_PORT=27017
      - DATABASE_NAME=strapi
      - DATABASE_USERNAME=
      - DATABASE_PASSWORD=
      - DATABASE_SSL=false
      - DATABASE_AUTHENTICATION_DATABASE=strapi
      - HOST=localhost
      - NODE_ENV=production
    ports:
      - 1337:1337
    volumes:
      - ./services/strapi/app:/usr/src/api/strapi-app
      #- /usr/src/api/strapi-app/node_modules
    depends_on:
      - strapidb
    restart: always

  strapidb:
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=strapi
    expose:
      - '27017'
    volumes:
      - ./services/strapi/db:/data/db
    restart: always
  
networks:
  proxy-network:
  databases-network:
